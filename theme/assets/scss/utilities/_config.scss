// ==========================================================================
// Global Config
// ==========================================================================

// Colors
$backgroundColor: #{'{{ settings.background_color }}'};
$textColor: #{'{{ settings.text_color }}'};
$linkColor: #{'{{ settings.link_color }}'};
$hoverColor: #{'{{ settings.link_hover_color}}'};
$headerColor: #{'{{ settings.header_color }}'};
$buttonColor: #{'{{ settings.button_color }}'};
$secondaryBackground: #{'{{ settings.secondary_background }}'};
$borderColor: #{'{{ settings.border_color }}'};

// Helper colors
$disabledGrey: #f6f6f6;
$disabledBorder: darken($disabledGrey, 25%);
$errorRed: #EA4859;
$errorRedBg: #fff6f6;
$successGreen: #63B726;
$successGreenBg: #ecfef0;

// Typography variables
$bodyFontStack:
  #{"{% if settings.type_base_family contains 'Google' %}"}
    #{"{% assign type_base_parts = settings.type_base_family | split: '_' %}"}
    #{"{% assign type_base_name = type_base_parts[1] %}"}
    "#{"{{ type_base_name | split: ':' | first | replace: '+', ' ' }}"}"
    #{"{% if type_base_parts.last == 'serif' %}, serif {% else %}"}, "HelveticaNeue", "Helvetica Neue", sans-serif#{"{% endif %}"}
  #{"{% else %}"}
    #{"{{ settings.type_base_family }}"}
  #{"{% endif %}"}
;

$headerFontStack:
  #{"{% if settings.type_header_family contains 'Google' %}"}
    #{"{% assign type_header_parts = settings.type_header_family | split: '_' %}"}
    #{"{% assign type_header_name = type_header_parts[1] %}"}
    "#{"{{ type_header_name | split: ':' | first | replace: '+', ' ' }}"}"
    #{"{% if type_header_parts.last == 'serif' %}, serif {% else %}"}, "HelveticaNeue", "Helvetica Neue", sans-serif#{"{% endif %}"}
  #{"{% else %}"}
    #{"{{ settings.type_header_family }}"}
  #{"{% endif %}"}
;

$headerFontWeight:
  #{"{% if settings.type_header_family contains 'Google' %}"}
    #{"{{ type_header_parts[2] }}"}
  #{"{% else %}"}
  500
  #{"{% endif %}"}
;

// Breakpoints and Grid Variables
$viewportIncrement: 1px;

$xsmall: 500px;
$small: 640px;
$medium: 800px;
$large: 945px;
$xlarge: 1200px;

$postSmall: $small + $viewportIncrement;
$preMedium: $medium - $viewportIncrement;
$postMedium: $medium + $viewportIncrement;
$preLarge: $large - $viewportIncrement;
$postLarge: $large + $viewportIncrement;
$postXlarge: $xlarge + $viewportIncrement;

// The following are dependencies of csswizardry grid
$breakpoints: (
  'small' '(max-width: #{$small})',
  'medium' '(min-width: #{$postSmall}) and (max-width: #{$medium})',
  'medium-down' '(max-width: #{$medium})',
  'large' '(min-width: #{$postMedium}) and (max-width: #{$large})',
  'xlarge' '(min-width: #{$postLarge})'
);
$breakpoint-has-widths: ('small', 'medium', 'medium-down', 'large', 'xlarge');
$breakpoint-has-push:  ('medium', 'medium-down', 'large', 'xlarge');
$breakpoint-has-pull:  ('medium', 'medium-down', 'large', 'xlarge');

$gridGutter: 20px; // can be a %, but nested grids will have smaller margins because of it

// The following are dependencies of at-query mixin
$min: min-width;
$max: max-width;
