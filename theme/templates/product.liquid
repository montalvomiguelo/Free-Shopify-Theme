<section class="product-pricing">
  <h1 class="product-pricing__title">{{ product.title }}</h1>

  {% comment %}
    Get first variant, or deep linked one
  {% endcomment %}
  {% assign current_variant = product.selected_or_first_available_variant %}
  <h2 class="product-pricing__price">
    <span>{{ current_variant.price | money }}</span>
    {% if product.compare_at_price > product.price %}
      <span class="product-pricing__status">{{ 'products.product.on_sale' | t }}</span>
    {% endif %}
  </h2>
</section>

<section class="product-images">
  {% assign featured_image = current_variant.featured_image | default: product.featured_image %}
  <a href="{{ featured_image | img_url: '1024x1024' }}">
    <img src="{{ featured_image | img_url: 'large' }}" alt="{{ featured_image.alt | escape }}" class="product-images__primary">
  </a>
  {% comment %}
    Create thumbnails if we have more than one product image
  {% endcomment %}
  {% if product.images.size > 1 %}
  <ul class="product-thumbnails">
  {% for image in product.images offset: 1 %}
    <li class="product-thumbnails__item">
      <a href="{{ image.src | img_url: 'large' }}"><img src="{{ image.src | img_url: 'compact' }}" alt="{{ image.alt | escape }}"></a>
    </li>
  {% endfor %}
  </ul>
  {% endif %}
</section>

<section class="product-details">
  <div class="product-details__description rte">
    {{ product.description }}
  </div>
  <form method="post" action="/cart/add">
    {% comment %}
      Add product variants as a dropdown.
        - By default, each variant (or combination of variants) will display as its own <option>
        - To separate these into multiple steps, which we suggest, use option_selection.js (see below)

      You can leverage jQuery to add a callback on page load and each time the select element changes:
        - Include option_selection.js (as seen at the bottom of this file)
        - This allows you to use JavaScript anytime the variant dropdown changes
        - This also separates out your variant options (ie. size, color, etc.) to separate select elements

      For more information on products with multiple options, visit:
        - http://docs.shopify.com/support/your-website/themes/can-i-make-my-theme-use-products-with-multiple-options#update-product-liquid
    {% endcomment %}
    <select name="id" id="productSelect">
      {% for variant in product.variants %}
        {% if variant.available %}

          {% comment %}
            Note: if you use option_selection.js, your <select> tag will be overwritten, meaning what you have inside <option> will not reflect what you coded below.
          {% endcomment %}
          <option {% if variant == product.selected_or_first_available_variant %} selected="selected" {% endif %} data-sku="{{ variant.sku }}" value="{{ variant.id }}">{{ variant.title }} - {{ variant.price | money_with_currency }}</option>

        {% else %}
          <option disabled="disabled">
            {{ variant.title }} - {{ 'products.product.sold_out' | t }}
          </option>
        {% endif %}
      {% endfor %}
    </select>

    <button class="button" name="add" type="submit" title="Add to Cart">{{ 'products.product.add_to_cart' | t }}</button>
  </form>
  {% include 'share-buttons' %}
</section>
